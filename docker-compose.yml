version: '3'
services:
  backend:
      build:
        context: ./backend
        dockerfile: Dockerfile
      container_name: nodeBackend
      ports:
        - '8082:8082'
      # volumes:
      #   - ./backend/:/app
      #   - /app/node_modules
      restart: 'unless-stopped'
      networks:
        - app_network
      links:
        - database
      depends_on:
        - database
  frontend:
      build:
        context: ./frontend
        dockerfile: Dockerfile
      container_name: reactFrontend
      ports:
        - '3000:3000'
      restart: 'unless-stopped'
      networks:
        - app_network
      links:
        - database
        - backend
      depends_on:
        - database
        - backend
  database:
    image: postgis/postgis
    container_name: postgis
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dbpass
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
  adminer:
    image: adminer
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: database
      ADMINER_DESIGN: pepa-linha-dark
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app_network
    depends_on:
        - database

networks:
  app_network: